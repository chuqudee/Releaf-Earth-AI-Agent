releaf_index_html_with_FAISS
+++++++++++++++++++++++++++++++

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Releaf AI Assistant</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; font-family: Arial, sans-serif; }
        body { display: flex; height: 100vh; background-color: #f8f9fa; }
        .sidebar { width: 250px; background-color: #1e293b; color: white; padding: 20px; }
        .main-container { flex-grow: 1; display: flex; flex-direction: column; background-color: white; }
        .content { display: flex; flex-grow: 1; }
        .chat-container { width: 50%; border-right: 2px solid #ddd; padding: 20px; }
        .chat-box { flex-grow: 1; overflow-y: auto; padding: 10px; height: 400px; border: 1px solid #ccc; }
        .message { padding: 10px; border-radius: 10px; margin-bottom: 10px; max-width: 70%; }
        .user-message { background-color: #007bff; color: white; align-self: flex-end; text-align: right; }
        .bot-message { background-color: #f1f1f1; color: black; align-self: flex-start; text-align: left; }
        .data-section { width: 50%; padding: 20px; }
        .input-container { display: flex; padding: 10px; background-color: #ffffff; border-top: 2px solid #ddd; }
        .input-container input { flex-grow: 1; padding: 10px; border: 1px solid #ccc; border-radius: 5px; font-size: 16px; }
        .input-container button { padding: 10px 15px; margin-left: 10px; background-color: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }
        .input-container button:hover { background-color: #0056b3; }
        #faiss-results { margin-top: 10px; padding: 10px; border: 1px solid #ccc; background-color: #fafafa; display: none; }
    </style>
</head>
<body>
    <div class="sidebar">
        <h1>Releaf</h1>
    </div>
    <div class="main-container">
        <div class="content">
            <div class="chat-container">
                <div class="chat-box" id="chat-box"></div>
                <div id="faiss-results"></div>
                <div class="input-container">
                    <input type="text" id="user-input" placeholder="Ask a question..." onkeypress="handleKeyPress(event)">
                    <button onclick="sendMessage()">Send</button>
                </div>
            </div>
            <div class="data-section">
                <h2>SQL View</h2>
                <div id="sql-view">No query results yet.</div>
                <h2>Chart</h2>
                <canvas id="chart-container"></canvas>
            </div>
        </div>
    </div>
    <script>
        function handleKeyPress(event) {
            if (event.key === "Enter") {
                sendMessage();
            }
        }
        function sendMessage() {
            let userInput = document.getElementById("user-input").value;
            if (userInput.trim() === "") return;
            let chatBox = document.getElementById("chat-box");
            let userMessage = document.createElement("div");
            userMessage.className = "message user-message";
            userMessage.textContent = userInput;
            chatBox.appendChild(userMessage);
            axios.post('/ask', { query: userInput })
                .then(response => {
                    let data = response.data;
                    let botResponse = document.createElement("div");
                    botResponse.className = "message bot-message";
                    botResponse.textContent = data.result || "No response received.";
                    chatBox.appendChild(botResponse);
                    if (data.result) {
                        document.getElementById("sql-view").innerHTML = JSON.stringify(data.result, null, 2);
                    }
                    if (data.similar_records) {
                        let faissResults = document.getElementById("faiss-results");
                        faissResults.innerHTML = "<h3>Related Records:</h3>" + JSON.stringify(data.similar_records, null, 2);
                        faissResults.style.display = "block";
                    }
                    chatBox.scrollTop = chatBox.scrollHeight;
                })
                .catch(error => {
                    let errorMessage = document.createElement("div");
                    errorMessage.className = "message bot-message";
                    errorMessage.textContent = "Error processing request.";
                    chatBox.appendChild(errorMessage);
                });
            document.getElementById("user-input").value = "";
        }
    </script>
</body>
</html>
